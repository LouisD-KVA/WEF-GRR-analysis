import numpy as np
import matplotlib.pyplot as plt

data = np.array([
    [16.875, 21.79166667, 9.75, 14.29166667, 5.666666667, 2.958333333,
        9.75, 1.875, 4.833333333, 0, 15.08333333, 15.375, 3.958333333, 0],
    [22.13263393, 23.38781876, 8.847010507, 13.58442248, 7.049240896, 6.656921074,
        8.847010507, 3.900814157, 1.354614738, 0, 19.41219991, 21.43973883, 5.833726565, 0],
    [25.71318895, 30.04201235, 11.96440286, 17.29594347, 8.033354235, 6.39380346,
        11.96440286, 3.589941475, 1.689457521, 0, 22.86360859, 28.65862756, 10.18021255, 0],
    [38.44847503, 44.80143344, 15.21322894, 25.07007509, 8.616199453, 6.483399276,
        13.79488756, 3.079462456, 3.313602385, 0, 33.30284598, 34.3552293, 1.418341382, 0],
    [45.29454692, 49.04197691, 15.08511939, 27.16480738, 9.416223745, 8.711364804,
        15.08511939, 3.089835937, 3.910526428, 0, 36.65867396, 38.29335857, 1.581288974, 0],
    [45.774741, 44.4473715, 23.922979, 24.83495983, 5.1733525, 7.451103333, 18.4906965,
        6.870999667, 4.464790333, 0, 38.96245367, 41.11764433, 2.701324167, 0],
    [58.24531498, 51.37850626, 37.88873887, 29.96743964, 7.706227113, 15.90677839, 31.41006747,
        7.79909342, 10.06426459, 2.502013668, 41.67139256, 49.97085568, 3.001900411, 2.502013668],
    [62.12818333, 54.58075, 41.25706667, 31.75326667, 8.057133333, 16.34081667, 33.90593333,
        9.104083333, 10.62475, 2.647733333, 44.40063333, 53.82371667, 3.277333333, 2.647733333],
    [42.52379791, 34.72761299, 19.97539321, 23.46456957, 4.599025899, 9.759525262, 17.18125156,
        4.780528282, 5.789625048, 0, 28.84694355, 34.94306289, 5.912507838, 2.794141648],
    [36.92472569, 31.88654083, 18.15931632, 26.7298815, 2.950294163, 10.73949976, 15.29679602,
        5.606858445, 8.575030645, 0, 19.8317023, 31.5688583, 2.862520295, 2.952168754],
    [40.36755485, 34.98539452, 18.62897989, 26.93649371, 2.734420962, 10.69751833, 15.59406756,
        5.562902516, 8.667121412, 0, 22.97171873, 35.17606869, 3.034912338, 3.103545483],
    [40.68804794, 37.76181707, 19.21219667, 30.2676129, 2.742506631, 10.60962913, 16.29159799,
        5.996710068, 8.657548705, 0, 22.29556746, 35.38086845, 2.920598681, 2.868387605],
    [39.14685526, 35.21012734, 19.54999232, 28.56372881, 2.603587223, 10.38653839, 16.5928013,
        5.767455552, 8.848292606, 0, 20.17272348, 33.84115842, 2.957191024, 2.704888414],
    [39.31335654, 35.46384882, 19.73445986, 27.93632214, 2.669269283, 10.61927768, 16.60630581,
        5.059498405, 8.848532308, 0, 20.34757522, 33.79145487, 3.12815405, 2.685268123],
    [38.87287622, 37.54558111, 19.88264901, 27.04150777, 2.578653425, 10.29009782, 16.57988591,
        4.787142433, 8.672732318, 0, 19.95710326, 33.42328726, 3.302763098, 2.735073014],
    [32.69286072, 31.39557616, 21.49262263, 20.72990662, 5.79839065, 7.357778527, 18.31216031,
        4.781377093, 7.832803154, 5.660295922, 18.26805016, 25.33508219, 8.072305275, 11.13678475],
    [38.86313466, 45.61368653, 24.46799117, 28.46799117, 13.8410596, 13.88962472, 16.20750552,
        6.353200883, 7.236203091, 14.18101545, 27.58940397, 28.81677704, 4.046357616, 14.18101545],
    [44.31514495, 46.41071604, 26.88121737, 23.94221741, 10.38202173, 16.76020224, 22.72507305,
        6.080994123, 17.91857907, 7.619488493, 29.43540497, 34.55103582, 4.156144325, 7.619488493]
])

# The years including 2011 and excluding 2022
years = np.array([2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
                 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2023, 2024])


# Calculer la moyenne et l'écart type pour chaque ligne
mean_vals = data.mean(axis=1, keepdims=True)
std_vals = data.std(axis=1, keepdims=True)

# Normaliser les données
data_normalized = (data - mean_vals) / std_vals

# Scale the data to the range [0, 1]
data_min = data_normalized.min()
data_max = data_normalized.max()
data_scaled = (data_normalized - data_min) / (data_max - data_min)

# Define the Spectrum names
at_names = [
    "1. Simplification", "2. Growth-for-Growth", "3. Overshoot", "4. Division", "5. Contagion",
    "6. Infrastructure lock-in", "7. Chemical pollution", "8. Existential technology",
    "9. Technological autonomy", "10. Dis- and misinformation", "11. Short-termism",
    "12. Overconsumption", "13. Biosphere disconnect", "14. Local social capital loss"
]

plt.figure(figsize=(12, 8))  # Augmenter la taille de la figure
plt.imshow(data_scaled, cmap='Blues', aspect='auto', vmin=0, vmax=1)
plt.colorbar(label='Normalized (Z-score method) Proportion of words')
plt.xlabel('Anthropocene Traps')
plt.ylabel('Years')
# Rotation et ajustement de la taille des étiquettes
plt.xticks(np.arange(14), at_names, rotation=40, ha='right', fontsize=8)
# Ajustement de la taille des étiquettes
plt.yticks(np.arange(18), years, fontsize=8)
plt.tight_layout()  # Ajustement automatique du placement des éléments dans la figure
plt.show()
